# librarys
library(ggplot2)
library(knitr)
###################################################################################################
# VORBEREITEN
###################################################################################################
# SCHRITT 1
# Daten einlesen: Patient, PON, Giemsa-Bands, alle Gene und eine Auswahl der relevanten.
patient = read.table("patient.fc.tsv", header=TRUE, row.names = 1, stringsAsFactors = F)
knitr::opts_knit$set(root.dir = "/media/vera/big_data/coriandR/output/98217.new.report")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
patient.data = read.table("patient.data.tsv", stringsAsFactors = F)
patient_name = patient.data[1, 2]
gender = as.character(patient.data[2, 2])
# librarys
library(ggplot2)
library(knitr)
###################################################################################################
# VORBEREITEN
###################################################################################################
# SCHRITT 1
# Daten einlesen: Patient, PON, Giemsa-Bands, alle Gene und eine Auswahl der relevanten.
patient = read.table("patient.fc.tsv", header=TRUE, row.names = 1, stringsAsFactors = F)
bin_data = read.table("pon.tsv", header=TRUE, row.names = 1, stringsAsFactors = F)
bin_data$Start = as.integer(bin_data$Start)
bin_data$End = as.integer(bin_data$End)
# pon wurde bereits erzuegt, normalisiert und mit den statistischenwerten versehen!
cytobands = read.table("../../tables/cytobands_sort.2.tsv", header=TRUE, sep = "\t", row.names = 1, stringsAsFactors = F)
# die farben sind bereits enthalten!
cancer_genes = read.table("../../tables/cancer.driver.genes_unique.and.goi.aml.csv", header=TRUE, sep = "\t",
stringsAsFactors = F)
all_genes = read.table("../../tables/all_genes.tsv", header=TRUE, row.names = 1, stringsAsFactors = F)
all_genes$start = as.integer(all_genes$start)
all_genes$end = as.integer(all_genes$end)
hist(patient[, 6], breaks=seq(0, max(patient[, 6]) + 10, by = 10), xlim = c(0, median(patient[, 6])*2.5))
abline(v = c(0.5, 1, 1.5, 2) *median(patient[, 6]), col = 'red', lty = 2)
axis(3, c(0.5, 1, 1.5, 2) *median(patient[, 6]), c(0.5, 1, 1.5, 2), line = 1, tick = F, col = 'red')
density(bin_data$mean)
density(bin_data[!is.na(bin_data$mean), "mean"])
dens <- density(bin_data[!is.na(bin_data$mean), "mean"])
dens <- density(bin_data[!is.na(bin_data$mean), "mean"]*median(patient[, 6]))
lines(0:1000, dens(0:1000))
dens <- density(bin_data[!is.na(bin_data$mean), "mean"]*median(patient[, 6]))
lines(0:1000, predict(dens, 0:1000))
lines(dens)
hist(patient[, 6], breaks=seq(0, max(patient[, 6]) + 10, by = 10), xlim = c(0, median(patient[, 6])*2.5))
abline(v = c(0.5, 1, 1.5, 2) *median(patient[, 6]), col = 'red', lty = 2)
axis(3, c(0.5, 1, 1.5, 2) *median(patient[, 6]), c(0.5, 1, 1.5, 2), line = 1, tick = F, col = 'red')
dens <- density(bin_data[!is.na(bin_data$mean), "mean"]*median(patient[, 6]))
lines(dens)
patient$norm = patient[, 6] /median(patient[, 6])*2
hist(patient$norm, breaks=seq(0, max(patient$norm) + 1, by = 0.02), xlim = c(0, 4))
abline(v = c(1, 2, 3, 4), col = 'red', lty = 2)
hist(patient[, 6], breaks=seq(0, max(patient[, 6]) + 10, by = 10), xlim = c(0, median(patient[, 6])*2.5))
abline(v = c(0.5, 1, 1.5, 2) *median(patient[, 6]), col = 'red', lty = 2)
axis(3, c(0.5, 1, 1.5, 2) *median(patient[, 6]), c(0.5, 1, 1.5, 2), line = 1, tick = F, col = 'red')
dens <- density(bin_data[!is.na(bin_data$mean), "mean"]*median(patient[, 6]))
lines(dens*nrow(bin_data))
hist(patient[, 6], breaks=seq(0, max(patient[, 6]) + 10, by = 10), xlim = c(0, median(patient[, 6])*2.5))
abline(v = c(0.5, 1, 1.5, 2) *median(patient[, 6]), col = 'red', lty = 2)
axis(3, c(0.5, 1, 1.5, 2) *median(patient[, 6]), c(0.5, 1, 1.5, 2), line = 1, tick = F, col = 'red')
dens <- density(bin_data[!is.na(bin_data$mean), "mean"]*median(patient[, 6]))
lines(dens*nrow(bin_data))
hist(patient[, 6], breaks=seq(0, max(patient[, 6]) + 10, by = 10), xlim = c(0, median(patient[, 6])*2.5))
abline(v = c(0.5, 1, 1.5, 2) *median(patient[, 6]), col = 'red', lty = 2)
axis(3, c(0.5, 1, 1.5, 2) *median(patient[, 6]), c(0.5, 1, 1.5, 2), line = 1, tick = F, col = 'red')
dens <- density(bin_data[!is.na(bin_data$mean), "mean"]*median(patient[, 6]))
lines(dens)
patient$norm = patient[, 6] /median(patient[, 6])*2
hist(patient$norm, breaks=seq(0, max(patient$norm) + 1, by = 0.02), xlim = c(0, 4))
abline(v = c(1, 2, 3, 4), col = 'red', lty = 2)
